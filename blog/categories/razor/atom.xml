<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Razor | Scott Smith]]></title>
  <link href="http://scottksmith.com/blog/categories/razor/atom.xml" rel="self"/>
  <link href="http://scottksmith.com/"/>
  <updated>2017-04-01T19:09:20-07:00</updated>
  <id>http://scottksmith.com/</id>
  <author>
    <name><![CDATA[Scott Smith]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using @ and _ with HTML Helpers in Razor Views]]></title>
    <link href="http://scottksmith.com/blog/2013/05/07/using-at-and-with-html-helpers-in-razor-views/"/>
    <updated>2013-05-07T11:38:00-07:00</updated>
    <id>http://scottksmith.com/blog/2013/05/07/using-at-and-with-html-helpers-in-razor-views</id>
    <content type="html"><![CDATA[<p>Here is a tip for you .NET developers.</p>




<p>When you are using HTML helpers there are times when you need to add extra attributes to the HTML element being produced by the helper. Two attributes that are commonly added are the class and data- attribute. HTML helpers support the ability to pass in an anonymous object for setting these attributes. The helper will take each item out of the anonymous object and add them to the html element as attributes.</p>




<!-- more -->




<p>Here is simple example that sets the id of the checkbox element:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="n">@Html</span><span class="p">.</span><span class="n">CheckBox</span><span class="p">(</span><span class="s">&quot;ignore&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">id</span> <span class="p">=</span> <span class="s">&quot;1&quot;</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This works just fine when things are simple, but what if you want to set the class attribute? If you were to try the following, it would fail:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="err">@</span><span class="n">@Html</span><span class="p">.</span><span class="n">CheckBox</span><span class="p">(</span><span class="s">&quot;ignore&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="k">class</span> <span class="err">= &quot;</span><span class="nc">bananas</span><span class="s">&quot; })</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The reason this fails is because class is a reserved keyword in C#. The way to get around this to preface the keyword with @ which tells the C# compiler to treat the word as a symbol.</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="err">@</span><span class="n">@Html</span><span class="p">.</span><span class="n">CheckBox</span><span class="p">(</span><span class="s">&quot;ignore&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">@class</span> <span class="p">=</span> <span class="s">&quot;bananas&quot;</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Now, say you want to add a data-name attribute to the element. If you were to create like the following, it would fail:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="err">@</span><span class="n">@Html</span><span class="p">.</span><span class="n">CheckBox</span><span class="p">(</span><span class="s">&quot;ignore&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">@class</span> <span class="p">=</span> <span class="s">&quot;bananas&quot;</span><span class="p">,</span> <span class="n">data</span><span class="p">-</span><span class="n">name</span> <span class="p">=</span> <span class="s">&quot;bit&quot;</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The reason this fails is because the C# compiler does not allow dashes (-) in variable names. Not to worry though, this is easily handled by using the underscore (_) character in place of the dash. The underscore will be automatically replaced with a dash at run time.</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='c#'><span class='line'><span class="err">@</span><span class="n">@Html</span><span class="p">.</span><span class="n">CheckBox</span><span class="p">(</span><span class="s">&quot;ignore&quot;</span><span class="p">,</span> <span class="k">new</span> <span class="p">{</span> <span class="n">@class</span> <span class="p">=</span> <span class="s">&quot;bananas&quot;</span><span class="p">,</span> <span class="n">data_name</span> <span class="p">=</span> <span class="s">&quot;bit&quot;</span> <span class="p">})</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So the final output would look like this:</p>


<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;input</span> <span class="na">class=</span><span class="s">&quot;bananas&quot;</span> <span class="na">data-name=</span><span class="s">&quot;bit&quot;</span> <span class="na">id=</span><span class="s">&quot;ignore&quot;</span> <span class="na">name=</span><span class="s">&quot;ignore&quot;</span> <span class="na">type=</span><span class="s">&quot;checkbox&quot;</span> <span class="na">value=</span><span class="s">&quot;true&quot;</span><span class="nt">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
